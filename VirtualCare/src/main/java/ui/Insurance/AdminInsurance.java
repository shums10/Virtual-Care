/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Insurance;

import com.db4o.ext.DatabaseClosedException;
import com.db4o.ext.Db4oIOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.AdminDetails;
import model.InsuranceRequests;
import ui.Hospital.AdminHospital;
import ui.User.UserSystem;

/**
 *
 * @author shubhampatil
 */
public class AdminInsurance extends javax.swing.JPanel {

    /**
     * Creates new form AdminInsurance
     */
    public AdminInsurance(AdminDetails a) {
        initComponents();
        this.a = a;
        DefaultTableModel InsMod = (DefaultTableModel) tblViewInsuranceRequest.getModel();
        this.InsMod = InsMod;
        try{
            PullInsuranceRequeststoList();
            populateNGOtable();
        }
        catch(NullPointerException E){
            JOptionPane.showMessageDialog(this, "No Requests Exist.");
        }
    }

    AdminDetails a;
    ArrayList<InsuranceRequests> InsReq;
    DefaultTableModel InsMod;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    void PullInsuranceRequeststoList(){
        ArrayList<InsuranceRequests> InsReq = new ArrayList<>();

        InsuranceRequests I;
        try {
            List<InsuranceRequests> Insuranceresult = UserSystem.Insudb.query(InsuranceRequests.class);
            if(Insuranceresult.isEmpty())
                return;
            Iterator Insuitr = Insuranceresult.iterator();
            while(Insuitr.hasNext()){
                I = (InsuranceRequests)Insuitr.next();
                if(a.getOrganization().equalsIgnoreCase(I.getToOrg()))
                    InsReq.add(I);
            }
        }
        catch(DatabaseClosedException | Db4oIOException E){
            JOptionPane.showMessageDialog(this, "Database Error.");
        }
        this.InsReq = InsReq;
    }
    
    void populateNGOtable(){
        InsMod.setRowCount(0);
        Iterator itr = InsReq.iterator();
        while(itr.hasNext()){
            InsuranceRequests I = (InsuranceRequests)itr.next();
            if(I.getStatus() == null){
                String data[] = {I.getFromHospital(), I.getPatientEmail(), String.valueOf(I.getAmount()), "Pending"};
                InsMod.addRow(data);
            }
            else{
                String data[] = {I.getFromHospital(), I.getPatientEmail(), String.valueOf(I.getAmount()), I.getStatus()};
                InsMod.addRow(data);
            }
        }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblViewInsuranceRequest = new javax.swing.JTable();
        btnApprove = new javax.swing.JButton();

        tblViewInsuranceRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Hospital", "Patient Id", "Amount", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblViewInsuranceRequest);

        btnApprove.setText("Approve");
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(290, 290, 290)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(96, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 664, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnApprove)
                .addGap(311, 311, 311))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnApprove)
                .addContainerGap(234, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed
        // TODO add your handling code here:
        if(tblViewInsuranceRequest.getSelectedRow() < 0)
            return;
        int Row = tblViewInsuranceRequest.getSelectedRow();
        String PatientEmail = tblViewInsuranceRequest.getValueAt(Row, 1).toString();
        
        InsuranceRequests I;
        
        Iterator itr = InsReq.iterator();
        while(itr.hasNext()){
            I = (InsuranceRequests)itr.next();
            if(I.getPatientEmail().equalsIgnoreCase(PatientEmail)){
                I.setStatus("Approved");
                AdminHospital.AddInsRequeststoDB(I);
                break;
            }
        }
        JOptionPane.showMessageDialog(this, "Request Approved.");
        populateNGOtable();
    }//GEN-LAST:event_btnApproveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApprove;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblViewInsuranceRequest;
    // End of variables declaration//GEN-END:variables
}
